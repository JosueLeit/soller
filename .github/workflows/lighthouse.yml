name: Lighthouse Performance Audit

on:
  schedule:
    - cron: '0 0 * * 1' # Run weekly on Mondays
  workflow_dispatch: # Allow manual triggering

jobs:
  lighthouse:
    name: Lighthouse Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Start application
      run: npm start &
      
    - name: Wait for application
      run: sleep 10
      
    - name: Run Lighthouse
      run: |
        npm install -g lighthouse
        lighthouse http://localhost:3000 --output=json --output-path=./lighthouse-report.json --chrome-flags="--headless --no-sandbox"
        
    - name: Upload Lighthouse report
      uses: actions/upload-artifact@v3
      with:
        name: lighthouse-report
        path: lighthouse-report.json
        
    - name: Comment PR with Lighthouse scores
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const lighthouse = JSON.parse(fs.readFileSync('./lighthouse-report.json'));
          
          const scores = {
            performance: Math.round(lighthouse.lhr.categories.performance.score * 100),
            accessibility: Math.round(lighthouse.lhr.categories.accessibility.score * 100),
            bestPractices: Math.round(lighthouse.lhr.categories['best-practices'].score * 100),
            seo: Math.round(lighthouse.lhr.categories.seo.score * 100),
          };
          
          const comment = `
          ## üîç Lighthouse Performance Report
          
          | Category | Score |
          |----------|-------|
          | Performance | ${scores.performance}% |
          | Accessibility | ${scores.accessibility}% |
          | Best Practices | ${scores.bestPractices}% |
          | SEO | ${scores.seo}% |
          
          ${scores.performance >= 90 ? '‚úÖ' : '‚ö†Ô∏è'} Performance: ${scores.performance}%
          ${scores.accessibility >= 90 ? '‚úÖ' : '‚ö†Ô∏è'} Accessibility: ${scores.accessibility}%
          ${scores.bestPractices >= 90 ? '‚úÖ' : '‚ö†Ô∏è'} Best Practices: ${scores.bestPractices}%
          ${scores.seo >= 90 ? '‚úÖ' : '‚ö†Ô∏è'} SEO: ${scores.seo}%
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });